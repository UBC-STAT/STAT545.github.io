---
title: "Lecture 1: Course Introduction and R"
date-modified: last-modified
---

## Welcome to STAT545!

Hi and welcome! My name is Grace Tompkins and I'm very excited to be your instructor for this year's session of STAT 545 A/B.

For today's lecture, we are going to go through the some important information related to the course and jump right into some coding in R.

### Course Platforms

We will be using various technologies throughout this course which you should familiarize yourself with. The main platforms we'll be using are;

-   The course website (this one!),

-   Canvas (for submitting assignments),

-   Slack (for communications),

-   RStudio (for writing R code),

-   GitHub (for version control and collaboration), and

-   Jupyter notebooks (for interactive worksheets).

If you've never used some of these before, that's absolutely OK. This course is made to guide you through the basics of many of these platforms.

### Important Course Information

All of the important information is in the syllabus, which you can navigate to at the top of this page. There are a few items I'd like to emphasize:

-   STAT 545 A has frequent worksheets. These are graded based on completion. For example, if you complete all 15 questions, you will score 100% for that worksheet. Complete 14/15? You'll get a 93%. They are relatively straight forward and will guide you through the topics we talked about that week.

-   Everyone gets one "pass" for a late worksheet. After the first occurrence, a 0 will be awarded for any late worksheet.

-   STAT 545 A has a mini data analysis and collaborative project worth most of your marks. These are not graded on the basis of how sophisticated your statistical analysis is, but on the quality of your code and workflow. A grading rubric will be posted for each.

-   There is a zero tolerance policy for late projects and analyses.

-   Stay home if you're sick. Fill out an Academic Concession Self Declaration form (linked on Canvas) if you miss an assessment due to illness. Accommodations will be given on a case-by-case basis.

-   Bring a charged laptop to class!

-   All communications are to be done on Slack - do not email me questions unless they are of a sensitive nature (i.e., an academic concession form).

-   Don't plagiarize code or assessments.

But please - read the syllabus :)

## Coding in R

#### The Basics

Let's get started! By this point, I'm assuming you've successfully installed R, RStudio, Github, and Jupyter notebooks. If you haven't, check out the previous lecture for a guide to setting up this software.

#### **What to do when you are stuck**

Working with technology can be hard. Coding can be especially hard. Getting stuck is very common in both cases.

Very useful general skills for getting unstuck are to 1. learn to help yourself, and 2. learn how to productively ask for help. The content below gives self-help advice for acquiring this skill.

-   [Google is your friend](http://xkcd.com/627/).

    -   E.g. copy the error message, maybe strip out anything highly specific, such the name of your R objects, surround with quotes and Google it!

-   While you are getting started, I recommend you seek help within the STAT545 community first (try Slack!), before, e.g. posting to external forums. We are more cuddly.

-   This stackoverflow thread [How to make a great R reproducible example?](http://stackoverflow.com/questions/5963269/how-to-make-a-great-r-reproducible-example/5963610#5963610) is fantastic. I find that, in the process of preparing my great reproducible example, I [answer my own question](http://htmlpreview.github.io/?https://gist.githubusercontent.com/jennybc/58466fd018823302f398/raw/4c7059558e1525b482f1ee794a5828ca8999bf98/2014-07-25_wrapper-graphics-dev-open-close.html) 90% of the time. YMMV. So it is a useful exercise even if you aren’t ready to call in the experts yet. The process of stripping your problem down to its bare essence often reveals where the root issue lies. **Highly recommended!**

-   Search [stackoverflow](http://stackoverflow.com/) and include the `[r]` tag. Or the `[ggplot2]` tag. Or the `[plyr]` tag. You get the idea.

-   Check out [The R Inferno](http://www.burns-stat.com/documents/books/the-r-inferno/) (see the 9th circle: “Unhelpfully seeking help”).

> If someone has the wit and knowledge to answer your question, they probably have other things they would like to do. Making your message clear, concise and user-friendly gives you the best hope of at least one of those strangers diverting their attention away from their life towards your problem.

-   Read [How To Ask Questions The Smart Way](http://www.catb.org/~esr/faqs/smart-questions.html) by Eric Raymond and Rick Moen. You’ll need a slightly thick skin, but they speak truth.

> … demonstrate the kind of attitude that leads to competence: alert, thoughtful, observant, willing to be an active partner in developing a solution

-   Read the [R-help posting guide](http://www.r-project.org/posting-guide.html). *But don’t rush to post any questions there!*

-   More links via [How to Ask Questions](https://github.com/ireapps/scraping-class/blob/master/notes/how-to-ask-questions.md) from a web-scraping class

    -   [How to Ask for Programming Help](http://codingkilledthecat.wordpress.com/2012/06/26/how-to-ask-for-programming-help/)

    -   [Stack Exchange’s ‘How to ask’](https://codereview.stackexchange.com/help/how-to-ask)

    -   [Matt Gemmell’s ‘What have you tried?’](http://mattgemmell.com/what-have-you-tried/)
